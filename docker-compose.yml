version: '3'

services:
    
    patient_app:
        image: patient_nodeapi
        #build: .
        volumes:
            - ./patient-services/config:/opt/app/config
            - ./patient-services/io:/opt/app/io
            - ./patient-services/modules:/opt/app/modules
            - ./patient-services/package.json:/opt/app/package.json
            - ./patient-services/patient_entrypoint.sh:/opt/app/patient_entrypoint.sh
            
        command: nodemon --legacy-watch io/api.js
        entrypoint: ./patient_entrypoint.sh
        ports:
            - "3000:3000"
        depends_on:
            - db
            # - fluentd
        environment:
            - PGHOST=db
            - PGDATABASE=postgres
            - PGUSER=postgres
        # env_file:
        #     - ./Docker/env
        # logging:
        #     driver: "fluentd"
        #     options:
        #         fluentd-address: localhost:24224
        #         tag: patient_app
                
        networks:
            webnet1:
                aliases:
                    - patient_app


    doctor_app:
        image: doctor_nodeapi
        #build: .
        volumes:
            - ./doctor-services/config:/opt/app/config
            - ./doctor-services/io:/opt/app/io
            - ./doctor-services/modules:/opt/app/modules
            - ./doctor-services/package.json:/opt/app/package.json
            
        command: nodemon --legacy-watch io/api.js
        #entrypoint: ./doctor_entrypoint.sh
        ports:
            - "3001:3000"
        depends_on:
            - db
            - appointment_app
            - report_app
            # - fluentd
        environment:
            - PGHOST=db
            - PGDATABASE=postgres
            - PGUSER=postgres
        # env_file:
        #     - ./Docker/env
        # logging:
        #     driver: "fluentd"
        #     options:
        #         fluentd-address: localhost:24224
        #         tag: doctor_app
        networks:
            webnet1:
                aliases:
                    - doctor_app

    appointment_app:
        image: appointment_nodeapi
        #build: .
        volumes:
            - ./appointment-services/config:/opt/app/config
            - ./appointment-services/io:/opt/app/io
            - ./appointment-services/modules:/opt/app/modules
            - ./appointment-services/package.json:/opt/app/package.json
            - ./appointment-services/appointment_entrypoint.sh:/opt/app/appointment_entrypoint.sh
            
        command: nodemon --legacy-watch io/api.js
        entrypoint: ./appointment_entrypoint.sh
        ports:
            - "3003:3000"
        depends_on:
            - db
            # - fluentd
        environment:
            - PGHOST=db
            - PGDATABASE=postgres
            - PGUSER=postgres
        # env_file:
        #     - ./Docker/env
        # logging:
        #     driver: "fluentd"
        #     options:
        #         fluentd-address: localhost:24224
        #         tag: appointment_app
        networks:
            webnet1:
                aliases:
                    - appointment_app

    appointment_home_app:
        image: appt_at_home_nodeapi
        #build: .
        volumes:
            - ./appointment-at-home-services/config:/opt/app/config
            - ./appointment-at-home-services/io:/opt/app/io
            - ./appointment-at-home-services/modules:/opt/app/modules
            - ./appointment-at-home-services/package.json:/opt/app/package.json
            
        command: nodemon --legacy-watch io/api.js
        #entrypoint: ./appointment_home_entrypoint.sh
        ports:
            - "3004:3000"
        depends_on:
            - db
            # - fluentd
        environment:
            - PGHOST=db
            - PGDATABASE=postgres
            - PGUSER=postgres
        # env_file:
        #     - ./Docker/env
        # logging:
        #     driver: "fluentd"
        #     options:
        #         fluentd-address: localhost:24224
        #         tag: appointment_home_app
        networks:
            webnet1:
                aliases:
                    - appointment_home_app


    # doc_schedule_app:
    #     image: doc_schedule_nodeapi
    #     #build: .
    #     volumes:
    #         - ./doctor-schedule-services/config:/opt/app/config
    #         - ./doctor-schedule-services/io:/opt/app/io
    #         - ./doctor-schedule-services/modules:/opt/app/modules
    #         - ./doctor-schedule-services/package.json:/opt/app/package.json
            
    #     command: nodemon --legacy-watch io/api.js
    #     ports:
    #         - "3004:3000"
    #     depends_on:
    #         - db
    #         - doctor_app
    #         - fluentd
    #     environment:
    #         - PGHOST=db
    #         - PGDATABASE=postgres
    #         - PGUSER=postgres
    #     # env_file:
    #     #     - ./Docker/env
    #     logging:
    #         driver: "fluentd"
    #         options:
    #             fluentd-address: localhost:24224
    #             tag: httpd.access
    #     networks:
    #         webnet1:
    #             aliases:
    #                 - doc_schedule_app

    report_app:
        image: report_nodeapi
        #build: .
        volumes:
            - ./report-services/config:/opt/app/config
            - ./report-services/io:/opt/app/io
            - ./report-services/modules:/opt/app/modules
            - ./report-services/package.json:/opt/app/package.json
            
        command: nodemon --legacy-watch io/api.js
        ports:
            - "3005:3000"
        depends_on:
            - db
            - appointment_app
            # - fluentd
        environment:
            - PGHOST=db
            - PGDATABASE=postgres
            - PGUSER=postgres
        # logging:
        #     driver: "fluentd"
        #     options:
        #         fluentd-address: localhost:24224
        #         tag: report_app
        networks:
            webnet1:
                aliases:
                    - report_app


    db:
        image: postgres:9.6.2-alpine
        ports: ["5433:5432"]
        environment:
           POSTGRES_USER: postgres
           POSTGRES_DB: familycare
        read_only: true
        tmpfs:
            - /tmp
            - /var/run/postgresql
        volumes:
            - db:/var/lib/postgresql/data
        # logging:
        #     driver: none
        networks:
            webnet1:
                aliases:
                    - db

    rabbit_mq:
        image: rabbitmq:3.6
        restart: "always"
        ports:
            - "15672"
            - "5672"
        environment:
            - "RABBITMQ_DEFAULT_PASS=rabbitmq"
            - "RABBITMQ_DEFAULT_USER=rabbitmq"
            - "RABBITMQ_DEFAULT_VHOST=vhost"
        # logging:
        #     driver: none
        networks:
            webnet1:
                aliases:
                    - rabbit

    # fluentd:
    #     build: ./fluentd
    #     volumes:
    #         - ./fluentd/conf:/fluentd/etc
    #     depends_on:
    #         - "elasticsearch"
    #     ports:
    #         - "24224:24224"
    #         - "24224:24224/udp"
    #     networks:
    #         webnet1:
    #             aliases:
    #                - fluentd    

    # elasticsearch:
    #     image: elasticsearch
    #     # expose:
    #     #     - 9200
    #     ports:
    #         - "9200:9200"
    #     logging:
    #         driver: none
    #     networks:
    #         webnet1:
    #             aliases:
    #                - elasticsearch    

    # kibana:
    #     image: kibana
    #     depends_on:
    #         - "elasticsearch"
    #     ports:
    #         - "5601:5601"
    #     logging:
    #         driver: none
    #     networks:
    #         webnet1:
    #             aliases:
    #                 - kibana


networks:
    webnet1:

volumes:
    db:
